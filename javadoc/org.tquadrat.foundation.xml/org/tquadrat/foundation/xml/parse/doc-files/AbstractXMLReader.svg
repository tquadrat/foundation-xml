
<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:cc="http://creativecommons.org/ns#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:svg="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     version='1.1'
     baseProfile='full'
     width='732.000'
     height='847.000'>
    <defs>
        <style><![CDATA[
            line
            {
              stroke: black;
            }
            line.separator
            {
              stroke:       black;
              stroke-width: 1;
            }
            marker
            {
              fill: white;
            }
            path
            {
              fill:   white;
              stroke: black;
            }
            path.implementation
            {
              fill:             none;
              stroke-dasharray: 5,5;
              stroke-width:     3;
            }
            path.inheritance
            {
              fill:         none;
              stroke-width: 3;
            }
            rect
            {
              fill:         none;
              stroke:       black;
              stroke-width: 2;
            }
            rect.externalClass
            {
              fill:         #D0D0D0;
              fill-opacity: 0.8;
            }
            rect.focusClass
            {
              fill:         #FFFFF9;
              fill-opacity: 0.8;
            }
            rect.otherClass
            {
              fill:         #F0E68C;
              fill-opacity: 0.8;
            }
            rect.template
            {
              fill:             #FFFFFF;
              fill-opacity:     1.0;
              stroke-dasharray: 3,3;
            }
            text
            {
              font-family: monospace;
              font-size:   10px;
              font-weight: bold;
            }
            text.abstract
            {
              font-style: italic;
            }
            text.final
            {
              text-decoration: underline;
            }
            text.static
            {
              font-weight: normal;
            }
            text.stereotype
            {
              font-size:   8px;
              font-weight: normal;
            }
            ]]></style>
        <marker id='inheritance'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <marker id='implementation'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <clipPath id='ID000001'>
            <rect class='focusClass'
                  height='392.000'
                  width='418.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.xml.parse.AbstractXMLReader'>
            <g>
                <g class='focusClass'
                   clip-path='url(#ID000001)'>
                    <rect x='0.000'
                          y='0.000'
                          width='418.000'
                          height='392.000'
                          class='focusClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='418.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='194.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Type&#xBB;</text>
                    <text x='158.000'
                          y='24.000'
                          class='abstract'>AbstractXMLReader</text>
                    <line x1='0.000'
                          y1='133.000'
                          x2='418.000'
                          y2='133.000'
                          class='separator'/>
                    <text y='41.000'
                          class='static final'>+ NO_ATTRIBUTES:org.xml.sax.Attributes</text>
                    <text y='52.000'>- m_ContentHandler:org.xml.sax.ContentHandler</text>
                    <text y='63.000'>- m_DTDHandler:org.xml.sax.DTDHandler</text>
                    <text y='74.000'>- m_Encoding:java.lang.String</text>
                    <text y='85.000'>- m_EntityResolver:org.xml.sax.EntityResolver</text>
                    <text y='96.000'>- m_ErrorHandler:org.xml.sax.ErrorHandler</text>
                    <text y='107.000'
                          class='final'>- m_Features:java.util.Map&lt;java.lang.String,java.lang.Boolean&gt;</text>
                    <text y='118.000'
                          class='final'>- m_Locator:org.xml.sax.helpers.LocatorImpl</text>
                    <text y='129.000'
                          class='final'>- m_Properties:java.util.Map&lt;java.lang.String,java.lang.Object&gt;</text>
                    <text x='5.000'
                          y='146.000'># AbstractXMLReader()</text>
                    <text x='5.000'
                          y='157.000'># AbstractXMLReader(contentHandler:org.xml.sax.ContentHandler)</text>
                    <text x='5.000'
                          y='168.000'>- createReader(input:org.xml.sax.InputSource):java.io.BufferedReader</text>
                    <text x='5.000'
                          y='179.000'>+ getContentHandler():org.xml.sax.ContentHandler</text>
                    <text x='5.000'
                          y='190.000'>+ getDTDHandler():org.xml.sax.DTDHandler</text>
                    <text x='5.000'
                          y='201.000'>+ getEntityResolver():org.xml.sax.EntityResolver</text>
                    <text x='5.000'
                          y='212.000'>+ getErrorHandler():org.xml.sax.ErrorHandler</text>
                    <text x='5.000'
                          y='223.000'>+ getFeature(name:java.lang.String):boolean</text>
                    <text x='5.000'
                          y='234.000'>+ getProperty(name:java.lang.String):java.lang.Object</text>
                    <text x='5.000'
                          y='245.000'># getLocator():org.xml.sax.Locator</text>
                    <text x='5.000'
                          y='256.000'>+ parse(input:org.xml.sax.InputSource):void</text>
                    <text x='5.000'
                          y='267.000'>+ parse(systemId:java.lang.String):void</text>
                    <text x='5.000'
                          y='278.000'
                          class='abstract'># process(input:java.io.BufferedReader):void</text>
                    <text x='5.000'
                          y='289.000'>+ setContentHandler(handler:org.xml.sax.ContentHandler):void</text>
                    <text x='5.000'
                          y='300.000'>+ setDTDHandler(handler:org.xml.sax.DTDHandler):void</text>
                    <text x='5.000'
                          y='311.000'>+ setEncoding(encoding:java.lang.String):void</text>
                    <text x='5.000'
                          y='322.000'>+ setEntityResolver(resolver:org.xml.sax.EntityResolver):void</text>
                    <text x='5.000'
                          y='333.000'>+ setErrorHandler(handler:org.xml.sax.ErrorHandler):void</text>
                    <text x='5.000'
                          y='344.000'>+ setFeature(name:java.lang.String,value:boolean):void</text>
                    <text x='5.000'
                          y='355.000'># setLocation(lineNumber:int,columnNumber:int):void</text>
                    <text x='5.000'
                          y='366.000'>+ setProperty(name:java.lang.String,value:java.lang.Object):void</text>
                    <text x='5.000'
                          y='377.000'># setPublicId(publicId:java.lang.String):void</text>
                    <text x='5.000'
                          y='388.000'># setSystemId(systemId:java.lang.String):void</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000002'>
            <rect class='externalClass'
                  height='172.000'
                  width='244.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='java.lang.Object'>
            <g>
                <g clip-path='url(#ID000002)'>
                    <rect x='0.000'
                          y='0.000'
                          width='244.000'
                          height='172.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='244.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='104.000'
                          y='13.000'>Object</text>
                    <line x1='0.000'
                          y1='34.000'
                          x2='244.000'
                          y2='34.000'
                          class='separator'/>
                    <text x='5.000'
                          y='30.000'/>
                    <text x='5.000'
                          y='47.000'>+ Object()</text>
                    <text x='5.000'
                          y='58.000'>+ getClass():java.lang.Class&lt;?&gt;</text>
                    <text x='5.000'
                          y='69.000'>+ hashCode():int</text>
                    <text x='5.000'
                          y='80.000'>+ equals(arg0:java.lang.Object):boolean</text>
                    <text x='5.000'
                          y='91.000'># clone():java.lang.Object</text>
                    <text x='5.000'
                          y='102.000'>+ toString():java.lang.String</text>
                    <text x='5.000'
                          y='113.000'>+ notify():void</text>
                    <text x='5.000'
                          y='124.000'>+ notifyAll():void</text>
                    <text x='5.000'
                          y='135.000'>+ wait():void</text>
                    <text x='5.000'
                          y='146.000'>+ wait(arg0:long):void</text>
                    <text x='5.000'
                          y='157.000'>+ wait(arg0:long,arg1:int):void</text>
                    <text x='5.000'
                          y='168.000'># finalize():void</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000003'>
            <rect class='externalClass'
                  height='205.000'
                  width='388.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.xml.sax.XMLReader'>
            <g>
                <g clip-path='url(#ID000003)'>
                    <rect x='0.000'
                          y='0.000'
                          width='388.000'
                          height='205.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='388.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='167.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='167.000'
                          y='24.000'
                          class='abstract'>XMLReader</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='388.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'
                          class='abstract'>+ getFeature(arg0:java.lang.String):boolean</text>
                    <text x='5.000'
                          y='69.000'
                          class='abstract'>+ setFeature(arg0:java.lang.String,arg1:boolean):void</text>
                    <text x='5.000'
                          y='80.000'
                          class='abstract'>+ getProperty(arg0:java.lang.String):java.lang.Object</text>
                    <text x='5.000'
                          y='91.000'
                          class='abstract'>+ setProperty(arg0:java.lang.String,arg1:java.lang.Object):void</text>
                    <text x='5.000'
                          y='102.000'
                          class='abstract'>+ setEntityResolver(arg0:org.xml.sax.EntityResolver):void</text>
                    <text x='5.000'
                          y='113.000'
                          class='abstract'>+ getEntityResolver():org.xml.sax.EntityResolver</text>
                    <text x='5.000'
                          y='124.000'
                          class='abstract'>+ setDTDHandler(arg0:org.xml.sax.DTDHandler):void</text>
                    <text x='5.000'
                          y='135.000'
                          class='abstract'>+ getDTDHandler():org.xml.sax.DTDHandler</text>
                    <text x='5.000'
                          y='146.000'
                          class='abstract'>+ setContentHandler(arg0:org.xml.sax.ContentHandler):void</text>
                    <text x='5.000'
                          y='157.000'
                          class='abstract'>+ getContentHandler():org.xml.sax.ContentHandler</text>
                    <text x='5.000'
                          y='168.000'
                          class='abstract'>+ setErrorHandler(arg0:org.xml.sax.ErrorHandler):void</text>
                    <text x='5.000'
                          y='179.000'
                          class='abstract'>+ getErrorHandler():org.xml.sax.ErrorHandler</text>
                    <text x='5.000'
                          y='190.000'
                          class='abstract'>+ parse(arg0:org.xml.sax.InputSource):void</text>
                    <text x='5.000'
                          y='201.000'
                          class='abstract'>+ parse(arg0:java.lang.String):void</text>
                </g>
            </g>
        </symbol>
    </defs>
    <path class='inheritance'
          d='M341.000,330.000 c0.000,-118.000,-194.000,0.000,-194.000,-118.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='implementation'
          d='M391.000,330.000 c0.000,-85.000,122.000,0.000,122.000,-85.000 v-15'
          marker-end='url(#implementation)'/>
    <use x='25.000'
         y='25.000'
         xlink:href='#java.lang.Object'/>
    <use x='319.000'
         y='25.000'
         xlink:href='#org.xml.sax.XMLReader'/>
    <use x='157.000'
         y='330.000'
         xlink:href='#org.tquadrat.foundation.xml.parse.AbstractXMLReader'/>
</svg>