
<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:cc="http://creativecommons.org/ns#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:svg="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     version='1.1'
     baseProfile='full'
     width='1260.000'
     height='968.000'>
    <defs>
        <style><![CDATA[
            line
            {
              stroke: black;
            }
            line.separator
            {
              stroke:       black;
              stroke-width: 1;
            }
            marker
            {
              fill: white;
            }
            path
            {
              fill:   white;
              stroke: black;
            }
            path.implementation
            {
              fill:             none;
              stroke-dasharray: 5,5;
              stroke-width:     3;
            }
            path.inheritance
            {
              fill:         none;
              stroke-width: 3;
            }
            rect
            {
              fill:         none;
              stroke:       black;
              stroke-width: 2;
            }
            rect.externalClass
            {
              fill:         #D0D0D0;
              fill-opacity: 0.8;
            }
            rect.focusClass
            {
              fill:         #FFFFF9;
              fill-opacity: 0.8;
            }
            rect.otherClass
            {
              fill:         #F0E68C;
              fill-opacity: 0.8;
            }
            rect.template
            {
              fill:             #FFFFFF;
              fill-opacity:     1.0;
              stroke-dasharray: 3,3;
            }
            text
            {
              font-family: monospace;
              font-size:   10px;
              font-weight: bold;
            }
            text.abstract
            {
              font-style: italic;
            }
            text.final
            {
              text-decoration: underline;
            }
            text.static
            {
              font-weight: normal;
            }
            text.stereotype
            {
              font-size:   8px;
              font-weight: normal;
            }
            ]]></style>
        <marker id='inheritance'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <marker id='implementation'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <clipPath id='ID000001'>
            <rect class='focusClass'
                  height='546.000'
                  width='1210.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.xml.builder.XMLBuilderUtils'>
            <g>
                <g class='focusClass'
                   clip-path='url(#ID000001)'>
                    <rect x='0.000'
                          y='0.000'
                          width='1210.000'
                          height='546.000'
                          class='focusClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='1210.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='560.000'
                          y='13.000'>XMLBuilderUtils</text>
                    <line x1='0.000'
                          y1='122.000'
                          x2='1210.000'
                          y2='122.000'
                          class='separator'/>
                    <text y='30.000'
                          class='static final'>- XML_NAME_FirstChar:java.lang.String</text>
                    <text y='41.000'
                          class='static final'>- XML_NAME_OtherChar:java.lang.String</text>
                    <text y='52.000'
                          class='static final'>- m_ValidatorChangeListeners:java.util.Collection&lt;java.lang.ref.WeakReference&lt;org.tquadrat.foundation.xml.builder.XMLBuilderUtils.ValidatorChangeListener&gt;&gt;</text>
                    <text y='63.000'
                          class='static final'>- m_AttributeNameValidator:java.util.concurrent.atomic.AtomicReference&lt;java.util.function.Predicate&lt;java.lang.CharSequence&gt;&gt;</text>
                    <text y='74.000'
                          class='static final'>- m_ElementNameValidator:java.util.concurrent.atomic.AtomicReference&lt;java.util.function.Predicate&lt;java.lang.CharSequence&gt;&gt;</text>
                    <text y='85.000'
                          class='static final'>- m_NMTokenPattern:java.util.regex.Pattern</text>
                    <text y='96.000'
                          class='static final'>- m_NMTokenValidator:java.util.concurrent.atomic.AtomicReference&lt;java.util.function.Predicate&lt;java.lang.CharSequence&gt;&gt;</text>
                    <text y='107.000'
                          class='static final'>- m_PrefixValidator:java.util.concurrent.atomic.AtomicReference&lt;java.util.function.Predicate&lt;java.lang.CharSequence&gt;&gt;</text>
                    <text y='118.000'
                          class='static final'>- m_XMLNamePattern:java.util.regex.Pattern</text>
                    <text x='5.000'
                          y='135.000'>- XMLBuilderUtils()</text>
                    <text x='5.000'
                          y='146.000'
                          class='static'>+ addValidatorChangeListener(listener:org.tquadrat.foundation.xml.builder.XMLBuilderUtils.ValidatorChangeListener):void</text>
                    <text x='5.000'
                          y='157.000'
                          class='static'>+ composeXMLHeader(encoding:java.nio.charset.Charset,standalone:boolean):org.tquadrat.foundation.xml.builder.ProcessingInstruction</text>
                    <text x='5.000'
                          y='168.000'
                          class='static'>+ createProcessingInstruction(elementName:java.lang.String):org.tquadrat.foundation.xml.builder.ProcessingInstruction</text>
                    <text x='5.000'
                          y='179.000'
                          class='static'>+ createProcessingInstruction(parent:org.tquadrat.foundation.xml.builder.XMLDocument,elementName:java.lang.String):org.tquadrat.foundation.xml.builder.ProcessingInstruction</text>
                    <text x='5.000'
                          y='190.000'
                          class='static'>+ createProcessingInstruction(elementName:java.lang.String,data:java.lang.CharSequence):org.tquadrat.foundation.xml.builder.ProcessingInstruction</text>
                    <text x='5.000'
                          y='201.000'
                          class='static'>+ createProcessingInstruction(parent:org.tquadrat.foundation.xml.builder.XMLDocument,elementName:java.lang.String,data:java.lang.CharSequence):org.tquadrat.foundation.xml.builder.ProcessingInstruction</text>
                    <text x='5.000'
                          y='212.000'
                          class='static'>+ createXMLDocument():org.tquadrat.foundation.xml.builder.XMLDocument</text>
                    <text x='5.000'
                          y='223.000'
                          class='static'>+ createXMLDocument(elementName:java.lang.String):org.tquadrat.foundation.xml.builder.XMLDocument</text>
                    <text x='5.000'
                          y='234.000'
                          class='static'>+ createXMLDocument(rootElement:org.tquadrat.foundation.xml.builder.XMLElement):org.tquadrat.foundation.xml.builder.XMLDocument</text>
                    <text x='5.000'
                          y='245.000'
                          class='static'>+ createXMLDocument(rootElement:org.tquadrat.foundation.xml.builder.XMLElement,standalone:boolean):org.tquadrat.foundation.xml.builder.XMLDocument</text>
                    <text x='5.000'
                          y='256.000'
                          class='static'>+ createXMLDocument(rootElement:org.tquadrat.foundation.xml.builder.XMLElement,encoding:java.nio.charset.Charset,name:java.lang.String,uri:java.net.URI):org.tquadrat.foundation.xml.builder.XMLDocument</text>
                    <text x='5.000'
                          y='267.000'
                          class='static'>+ createXMLDocument(rootElement:org.tquadrat.foundation.xml.builder.XMLElement,encoding:java.nio.charset.Charset,uri:java.net.URI):org.tquadrat.foundation.xml.builder.XMLDocument</text>
                    <text x='5.000'
                          y='278.000'
                          class='static'>+ createXMLElement(elementName:java.lang.String):org.tquadrat.foundation.xml.builder.XMLElement</text>
                    <text x='5.000'
                          y='289.000'
                          class='static'>+ createXMLElement(elementName:java.lang.String,text:java.lang.CharSequence):org.tquadrat.foundation.xml.builder.XMLElement</text>
                    <text x='5.000'
                          y='300.000'
                          class='static'>+ createXMLElement(elementName:java.lang.String,parent:org.tquadrat.foundation.xml.builder.XMLElement):org.tquadrat.foundation.xml.builder.XMLElement</text>
                    <text x='5.000'
                          y='311.000'
                          class='static'>+ createXMLElement(elementName:java.lang.String,parent:org.tquadrat.foundation.xml.builder.XMLElement,text:java.lang.CharSequence):org.tquadrat.foundation.xml.builder.XMLElement</text>
                    <text x='5.000'
                          y='322.000'
                          class='static'>+ createXMLElement(elementName:java.lang.String,parent:org.tquadrat.foundation.xml.builder.XMLDocument):org.tquadrat.foundation.xml.builder.XMLElement</text>
                    <text x='5.000'
                          y='333.000'
                          class='static'>+ createXMLElement(elementName:java.lang.String,parent:org.tquadrat.foundation.xml.builder.XMLDocument,text:java.lang.CharSequence):org.tquadrat.foundation.xml.builder.XMLElement</text>
                    <text x='5.000'
                          y='344.000'
                          class='static'>+ escapeXML(str:java.lang.CharSequence):java.lang.String</text>
                    <text x='5.000'
                          y='355.000'
                          class='static'>+ escapeXML(appendable:java.lang.Appendable,str:java.lang.CharSequence):void</text>
                    <text x='5.000'
                          y='366.000'
                          class='static'>+ getAttributeNameValidator():java.util.function.Predicate&lt;java.lang.CharSequence&gt;</text>
                    <text x='5.000'
                          y='377.000'
                          class='static'>+ getElementNameValidator():java.util.function.Predicate&lt;java.lang.CharSequence&gt;</text>
                    <text x='5.000'
                          y='388.000'
                          class='static'>+ getNMTokenValidator():java.util.function.Predicate&lt;java.lang.CharSequence&gt;</text>
                    <text x='5.000'
                          y='399.000'
                          class='static'>+ getPrefixValidator():java.util.function.Predicate&lt;java.lang.CharSequence&gt;</text>
                    <text x='5.000'
                          y='410.000'
                          class='static'>- isValidAttributeName(attributeName:java.lang.CharSequence):boolean</text>
                    <text x='5.000'
                          y='421.000'
                          class='static'>- isValidElementName(elementName:java.lang.CharSequence):boolean</text>
                    <text x='5.000'
                          y='432.000'
                          class='static'>- isValidNMToken(nmtoken:java.lang.CharSequence):boolean</text>
                    <text x='5.000'
                          y='443.000'
                          class='static'>- isValidPrefix(prefix:java.lang.CharSequence):boolean</text>
                    <text x='5.000'
                          y='454.000'
                          class='static'>+ removeValidatorChangeListener(listener:org.tquadrat.foundation.xml.builder.XMLBuilderUtils.ValidatorChangeListener):void</text>
                    <text x='5.000'
                          y='465.000'
                          class='static'>+ restoreDefaultValidators():void</text>
                    <text x='5.000'
                          y='476.000'
                          class='static'>+ setAttributeNameValidator(validator:java.util.function.Predicate&lt;java.lang.CharSequence&gt;):void</text>
                    <text x='5.000'
                          y='487.000'
                          class='static'>+ setElementNameValidator(validator:java.util.function.Predicate&lt;java.lang.CharSequence&gt;):void</text>
                    <text x='5.000'
                          y='498.000'
                          class='static'>+ setNMTokenValidator(validator:java.util.function.Predicate&lt;java.lang.CharSequence&gt;):void</text>
                    <text x='5.000'
                          y='509.000'
                          class='static'>+ setPrefixValidator(validator:java.util.function.Predicate&lt;java.lang.CharSequence&gt;):void</text>
                    <text x='5.000'
                          y='520.000'
                          class='static'>+ stripXMLComments(s:java.lang.CharSequence):java.lang.String</text>
                    <text x='5.000'
                          y='531.000'
                          class='static'>+ unescapeXML(str:java.lang.CharSequence):java.lang.String</text>
                    <text x='5.000'
                          y='542.000'
                          class='static'>+ unescapeXML(appendable:java.lang.Appendable,str:java.lang.CharSequence):void</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000002'>
            <rect class='externalClass'
                  height='172.000'
                  width='244.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='java.lang.Object'>
            <g>
                <g clip-path='url(#ID000002)'>
                    <rect x='0.000'
                          y='0.000'
                          width='244.000'
                          height='172.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='244.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='104.000'
                          y='13.000'>Object</text>
                    <line x1='0.000'
                          y1='34.000'
                          x2='244.000'
                          y2='34.000'
                          class='separator'/>
                    <text x='5.000'
                          y='30.000'/>
                    <text x='5.000'
                          y='47.000'>+ Object()</text>
                    <text x='5.000'
                          y='58.000'>+ getClass():java.lang.Class&lt;?&gt;</text>
                    <text x='5.000'
                          y='69.000'>+ hashCode():int</text>
                    <text x='5.000'
                          y='80.000'>+ equals(arg0:java.lang.Object):boolean</text>
                    <text x='5.000'
                          y='91.000'># clone():java.lang.Object</text>
                    <text x='5.000'
                          y='102.000'>+ toString():java.lang.String</text>
                    <text x='5.000'
                          y='113.000'>+ notify():void</text>
                    <text x='5.000'
                          y='124.000'>+ notifyAll():void</text>
                    <text x='5.000'
                          y='135.000'>+ wait():void</text>
                    <text x='5.000'
                          y='146.000'>+ wait(arg0:long):void</text>
                    <text x='5.000'
                          y='157.000'>+ wait(arg0:long,arg1:int):void</text>
                    <text x='5.000'
                          y='168.000'># finalize():void</text>
                </g>
            </g>
        </symbol>
    </defs>
    <path class='inheritance'
          d='M630.000,297.000 L630.000,197.000'
          marker-end='url(#inheritance)'/>
    <use x='508.000'
         y='25.000'
         xlink:href='#java.lang.Object'/>
    <use x='25.000'
         y='297.000'
         xlink:href='#org.tquadrat.foundation.xml.builder.XMLBuilderUtils'/>
</svg>